#!/bin/bash
# "exec" "snakemake" "--printshellcmds" "--snakefile" "$0" "--jobs" "20" "--latency-wait" "60" "--keep-going"
"exec" "snakemake" "--printshellcmds" "--jobs" "25000" "--snakefile" "$0" "--latency-wait" "60" "--keep-going" "--cluster" "qsub -l mem_free=28G,h_vmem=30G"

import os.path
import itertools
import subprocess


def gene_iter():
    with subprocess.Popen("cut -f 1 ../../_m/genes/twas_gene_expression.txt | tail -n +2", shell=True, stdout=subprocess.PIPE) as p:
        for i, l in enumerate(p.stdout):
            yield l.decode().rstrip(), i


SAMPLE_DICT = {k:v for k,v in gene_iter()}

rule all:
    input:
        expand('../_m/{sample}.hsq',
	       sample=SAMPLE_DICT.keys())

        
rule compute_weights:
    output:
        '../_m/{sample}.hsq'

    params:
        number = lambda x: SAMPLE_DICT[x.sample]

    shell:
        '''
        ../_h/parallel_compute_weights.sh --batch_number {params.number} --batch_size 1 --threads 1 2> cw_{params.number}_error.out 1> cw_{params.number}_summary.out
'''
